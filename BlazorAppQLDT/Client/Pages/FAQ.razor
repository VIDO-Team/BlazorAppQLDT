@page "/faq"
@page "/faq/{id:int}"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using BlazorAppQLDT.Shared
@attribute [Authorize]
@inject HttpClient Http
@inject IFAQAppService FAQAppService
@inject NavigationManager NavigationManager

@if (Id == null)
{
    <PageTitle>Create a new FAQ</PageTitle>
    <h3>Create a FAQ</h3>
}
else
{
    <PageTitle>Edit FAQ</PageTitle>
    <h3>Edit FAQ </h3>    
}

@* <EditForm Model="faq" OnSubmit="HandelSubmit">
    <div>
        <label for="questionid">QuestionId</label>
        <InputText id="questionid" @bind-Value="faq.QuestionId" class="form-control"></InputText>
    </div>
        <div>
        <label for="questiontype">QuestionType</label><br />
        <InputSelect @bind-Value="faq.QuestionType" class="form-select">
               <option>Equals</option>
               <option>Star With</option>
               <option>Contains</option>
        </InputSelect>        
    </div>
    <div>
        <label for="question">Question</label>
        <InputText id="question" @bind-Value="faq.Question" class="form-control"></InputText>
    </div>
    <div>
        <label for="answers">Answers</label>
        <InputText id="answers" @bind-Value="faq.Answers" class="form-control"></InputText>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
    <button type="button" class="btn btn-danger" @onclick="DeleteFAQ">@btnDelete</button>
</EditForm> *@

@code
{
    [Parameter]
    public int? Id { get; set; }
    string btnText = string.Empty;
    string btnDelete = string.Empty;
    FAQAppModel faq = new FAQAppModel();
    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Add New FAQ" : "Update FAQ";
        btnDelete = Id == null ? "Cancel" : "Delete FAQ";
    }
    protected override async Task OnParametersSetAsync()
    {
        faq = await FAQAppService.GetSingleFAQ((int)Id);
    }

    @* async Task HandelSubmit()
    {
        if (QuestionId == null)
        {
            await FAQAppService.CreateFAQ(faq);
        }
        else
        {
            await FAQAppService.UpdateFAQ(faq);
        }
    }

    async Task DeleteFAQ()
    {
        if(QuestionId != null)
            await FAQAppService.DeleteFAQ(faq.QuestionId);
        NavigationManager.NavigateTo("/faqapps");
    } *@

}